/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import quantasma.app.db.tables.Brokers;
import quantasma.app.db.tables.interfaces.IBrokers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "brokers", schema = "public", indexes = {
    @Index(name = "brokers_pk_id", unique = true, columnList = "id ASC"),
    @Index(name = "brokers_uq_name", unique = true, columnList = "name ASC")
})
public class BrokersRecord extends UpdatableRecordImpl<BrokersRecord> implements Record6<Long, String, LocalDateTime, LocalDateTime, LocalDateTime, Boolean>, IBrokers {

    private static final long serialVersionUID = -1163936584;

    /**
     * Setter for <code>public.brokers.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.brokers.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.brokers.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.brokers.name</code>.
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.brokers.x_created_on</code>.
     */
    @Override
    public void setXCreatedOn(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.brokers.x_created_on</code>.
     */
    @Column(name = "x_created_on", nullable = false)
    @Override
    public LocalDateTime getXCreatedOn() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.brokers.x_updated_on</code>.
     */
    @Override
    public void setXUpdatedOn(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.brokers.x_updated_on</code>.
     */
    @Column(name = "x_updated_on")
    @Override
    public LocalDateTime getXUpdatedOn() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.brokers.x_deleted_on</code>.
     */
    @Override
    public void setXDeletedOn(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.brokers.x_deleted_on</code>.
     */
    @Column(name = "x_deleted_on")
    @Override
    public LocalDateTime getXDeletedOn() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.brokers.x_active</code>.
     */
    @Override
    public void setXActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.brokers.x_active</code>.
     */
    @Column(name = "x_active")
    @Override
    public Boolean getXActive() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, LocalDateTime, LocalDateTime, LocalDateTime, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, LocalDateTime, LocalDateTime, LocalDateTime, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Brokers.BROKERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Brokers.BROKERS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return Brokers.BROKERS.X_CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Brokers.BROKERS.X_UPDATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return Brokers.BROKERS.X_DELETED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Brokers.BROKERS.X_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getXCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component4() {
        return getXUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component5() {
        return getXDeletedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getXActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getXCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getXUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getXDeletedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getXActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokersRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokersRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokersRecord value3(LocalDateTime value) {
        setXCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokersRecord value4(LocalDateTime value) {
        setXUpdatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokersRecord value5(LocalDateTime value) {
        setXDeletedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokersRecord value6(Boolean value) {
        setXActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BrokersRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4, LocalDateTime value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IBrokers from) {
        setId(from.getId());
        setName(from.getName());
        setXCreatedOn(from.getXCreatedOn());
        setXUpdatedOn(from.getXUpdatedOn());
        setXDeletedOn(from.getXDeletedOn());
        setXActive(from.getXActive());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IBrokers> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BrokersRecord
     */
    public BrokersRecord() {
        super(Brokers.BROKERS);
    }

    /**
     * Create a detached, initialised BrokersRecord
     */
    public BrokersRecord(Long id, String name, LocalDateTime xCreatedOn, LocalDateTime xUpdatedOn, LocalDateTime xDeletedOn, Boolean xActive) {
        super(Brokers.BROKERS);

        set(0, id);
        set(1, name);
        set(2, xCreatedOn);
        set(3, xUpdatedOn);
        set(4, xDeletedOn);
        set(5, xActive);
    }
}
