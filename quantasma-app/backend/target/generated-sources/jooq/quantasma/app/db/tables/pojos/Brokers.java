/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.pojos;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import quantasma.app.db.tables.interfaces.IBrokers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "brokers", schema = "public", indexes = {
    @Index(name = "brokers_pk_id", unique = true, columnList = "id ASC"),
    @Index(name = "brokers_uq_name", unique = true, columnList = "name ASC")
})
public class Brokers implements IBrokers {

    private static final long serialVersionUID = -2068110439;

    private Long          id;
    private String        name;
    private LocalDateTime xCreatedOn;
    private LocalDateTime xUpdatedOn;
    private LocalDateTime xDeletedOn;
    private Boolean       xActive;

    public Brokers() {}

    public Brokers(IBrokers value) {
        this.id = value.getId();
        this.name = value.getName();
        this.xCreatedOn = value.getXCreatedOn();
        this.xUpdatedOn = value.getXUpdatedOn();
        this.xDeletedOn = value.getXDeletedOn();
        this.xActive = value.getXActive();
    }

    public Brokers(
        Long          id,
        String        name,
        LocalDateTime xCreatedOn,
        LocalDateTime xUpdatedOn,
        LocalDateTime xDeletedOn,
        Boolean       xActive
    ) {
        this.id = id;
        this.name = name;
        this.xCreatedOn = xCreatedOn;
        this.xUpdatedOn = xUpdatedOn;
        this.xDeletedOn = xDeletedOn;
        this.xActive = xActive;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "x_created_on", nullable = false)
    @Override
    public LocalDateTime getXCreatedOn() {
        return this.xCreatedOn;
    }

    @Override
    public void setXCreatedOn(LocalDateTime xCreatedOn) {
        this.xCreatedOn = xCreatedOn;
    }

    @Column(name = "x_updated_on")
    @Override
    public LocalDateTime getXUpdatedOn() {
        return this.xUpdatedOn;
    }

    @Override
    public void setXUpdatedOn(LocalDateTime xUpdatedOn) {
        this.xUpdatedOn = xUpdatedOn;
    }

    @Column(name = "x_deleted_on")
    @Override
    public LocalDateTime getXDeletedOn() {
        return this.xDeletedOn;
    }

    @Override
    public void setXDeletedOn(LocalDateTime xDeletedOn) {
        this.xDeletedOn = xDeletedOn;
    }

    @Column(name = "x_active")
    @Override
    public Boolean getXActive() {
        return this.xActive;
    }

    @Override
    public void setXActive(Boolean xActive) {
        this.xActive = xActive;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Brokers (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(xCreatedOn);
        sb.append(", ").append(xUpdatedOn);
        sb.append(", ").append(xDeletedOn);
        sb.append(", ").append(xActive);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IBrokers from) {
        setId(from.getId());
        setName(from.getName());
        setXCreatedOn(from.getXCreatedOn());
        setXUpdatedOn(from.getXUpdatedOn());
        setXDeletedOn(from.getXDeletedOn());
        setXActive(from.getXActive());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IBrokers> E into(E into) {
        into.from(this);
        return into;
    }
}
