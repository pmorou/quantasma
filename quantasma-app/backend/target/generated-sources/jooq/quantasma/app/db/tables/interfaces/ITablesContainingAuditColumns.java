/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "tables_containing_audit_columns", schema = "public")
public interface ITablesContainingAuditColumns extends Serializable {

    /**
     * Setter for <code>public.tables_containing_audit_columns.schema_name</code>.
     */
    public void setSchemaName(String value);

    /**
     * Getter for <code>public.tables_containing_audit_columns.schema_name</code>.
     */
    @Column(name = "schema_name")
    public String getSchemaName();

    /**
     * Setter for <code>public.tables_containing_audit_columns.table_name</code>.
     */
    public void setTableName(String value);

    /**
     * Getter for <code>public.tables_containing_audit_columns.table_name</code>.
     */
    @Column(name = "table_name")
    public String getTableName();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ITablesContainingAuditColumns
     */
    public void from(quantasma.app.db.tables.interfaces.ITablesContainingAuditColumns from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ITablesContainingAuditColumns
     */
    public <E extends quantasma.app.db.tables.interfaces.ITablesContainingAuditColumns> E into(E into);
}
