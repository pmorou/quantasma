/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import quantasma.app.db.enums.StrategyStatus;
import quantasma.app.db.enums.StrategyType;
import quantasma.app.db.tables.Strategies;
import quantasma.app.db.tables.interfaces.IStrategies;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "strategies", schema = "public", indexes = {
    @Index(name = "strategies_pk_id", unique = true, columnList = "id ASC"),
    @Index(name = "strategies_uq_name", unique = true, columnList = "name ASC")
})
public class StrategiesRecord extends UpdatableRecordImpl<StrategiesRecord> implements Record11<Long, String, String, String, Boolean, StrategyStatus, StrategyType[], LocalDateTime, LocalDateTime, LocalDateTime, Boolean>, IStrategies {

    private static final long serialVersionUID = 1936141539;

    /**
     * Setter for <code>public.strategies.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.strategies.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.strategies.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.strategies.name</code>.
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.strategies.class</code>.
     */
    @Override
    public void setClass_(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.strategies.class</code>.
     */
    @Column(name = "class", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getClass_() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.strategies.checksum</code>.
     */
    @Override
    public void setChecksum(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.strategies.checksum</code>.
     */
    @Column(name = "checksum", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getChecksum() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.strategies.active</code>.
     */
    @Override
    public void setActive(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.strategies.active</code>.
     */
    @Column(name = "active", nullable = false)
    @NotNull
    @Override
    public Boolean getActive() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.strategies.status</code>.
     */
    @Override
    public void setStatus(StrategyStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.strategies.status</code>.
     */
    @Column(name = "status", nullable = false)
    @NotNull
    @Override
    public StrategyStatus getStatus() {
        return (StrategyStatus) get(5);
    }

    /**
     * Setter for <code>public.strategies.type</code>.
     */
    @Override
    public void setType(StrategyType... value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.strategies.type</code>.
     */
    @Column(name = "type", nullable = false)
    @NotNull
    @Override
    public StrategyType[] getType() {
        return (StrategyType[]) get(6);
    }

    /**
     * Setter for <code>public.strategies.x_created_on</code>.
     */
    @Override
    public void setXCreatedOn(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.strategies.x_created_on</code>.
     */
    @Column(name = "x_created_on", nullable = false)
    @Override
    public LocalDateTime getXCreatedOn() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.strategies.x_updated_on</code>.
     */
    @Override
    public void setXUpdatedOn(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.strategies.x_updated_on</code>.
     */
    @Column(name = "x_updated_on")
    @Override
    public LocalDateTime getXUpdatedOn() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.strategies.x_deleted_on</code>.
     */
    @Override
    public void setXDeletedOn(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.strategies.x_deleted_on</code>.
     */
    @Column(name = "x_deleted_on")
    @Override
    public LocalDateTime getXDeletedOn() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.strategies.x_active</code>.
     */
    @Override
    public void setXActive(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.strategies.x_active</code>.
     */
    @Column(name = "x_active")
    @Override
    public Boolean getXActive() {
        return (Boolean) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, String, String, String, Boolean, StrategyStatus, StrategyType[], LocalDateTime, LocalDateTime, LocalDateTime, Boolean> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, String, String, String, Boolean, StrategyStatus, StrategyType[], LocalDateTime, LocalDateTime, LocalDateTime, Boolean> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Strategies.STRATEGIES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Strategies.STRATEGIES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Strategies.STRATEGIES.CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Strategies.STRATEGIES.CHECKSUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Strategies.STRATEGIES.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<StrategyStatus> field6() {
        return Strategies.STRATEGIES.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<StrategyType[]> field7() {
        return Strategies.STRATEGIES.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field8() {
        return Strategies.STRATEGIES.X_CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field9() {
        return Strategies.STRATEGIES.X_UPDATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field10() {
        return Strategies.STRATEGIES.X_DELETED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return Strategies.STRATEGIES.X_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getClass_();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getChecksum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategyStatus component6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategyType[] component7() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component8() {
        return getXCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component9() {
        return getXUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component10() {
        return getXDeletedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component11() {
        return getXActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getClass_();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getChecksum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategyStatus value6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategyType[] value7() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value8() {
        return getXCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value9() {
        return getXUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value10() {
        return getXDeletedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getXActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value3(String value) {
        setClass_(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value4(String value) {
        setChecksum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value5(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value6(StrategyStatus value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value7(StrategyType... value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value8(LocalDateTime value) {
        setXCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value9(LocalDateTime value) {
        setXUpdatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value10(LocalDateTime value) {
        setXDeletedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord value11(Boolean value) {
        setXActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrategiesRecord values(Long value1, String value2, String value3, String value4, Boolean value5, StrategyStatus value6, StrategyType[] value7, LocalDateTime value8, LocalDateTime value9, LocalDateTime value10, Boolean value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IStrategies from) {
        setId(from.getId());
        setName(from.getName());
        setClass_(from.getClass_());
        setChecksum(from.getChecksum());
        setActive(from.getActive());
        setStatus(from.getStatus());
        setType(from.getType());
        setXCreatedOn(from.getXCreatedOn());
        setXUpdatedOn(from.getXUpdatedOn());
        setXDeletedOn(from.getXDeletedOn());
        setXActive(from.getXActive());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IStrategies> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StrategiesRecord
     */
    public StrategiesRecord() {
        super(Strategies.STRATEGIES);
    }

    /**
     * Create a detached, initialised StrategiesRecord
     */
    public StrategiesRecord(Long id, String name, String class_, String checksum, Boolean active, StrategyStatus status, StrategyType[] type, LocalDateTime xCreatedOn, LocalDateTime xUpdatedOn, LocalDateTime xDeletedOn, Boolean xActive) {
        super(Strategies.STRATEGIES);

        set(0, id);
        set(1, name);
        set(2, class_);
        set(3, checksum);
        set(4, active);
        set(5, status);
        set(6, type);
        set(7, xCreatedOn);
        set(8, xUpdatedOn);
        set(9, xDeletedOn);
        set(10, xActive);
    }
}
