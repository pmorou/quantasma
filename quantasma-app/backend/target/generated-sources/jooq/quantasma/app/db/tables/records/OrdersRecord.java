/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import quantasma.app.db.enums.OrderStatus;
import quantasma.app.db.tables.Orders;
import quantasma.app.db.tables.interfaces.IOrders;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "orders", schema = "public", indexes = {
    @Index(name = "orders_pk_id", unique = true, columnList = "id ASC")
})
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record10<Long, Long, String, Long, BigDecimal, OrderStatus, LocalDateTime, LocalDateTime, LocalDateTime, Boolean>, IOrders {

    private static final long serialVersionUID = -1843863700;

    /**
     * Setter for <code>public.orders.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.orders.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.orders.instrument_id</code>.
     */
    @Override
    public void setInstrumentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.orders.instrument_id</code>.
     */
    @Column(name = "instrument_id", nullable = false, precision = 64)
    @NotNull
    @Override
    public Long getInstrumentId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.orders.side</code>.
     */
    @Override
    public void setSide(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.orders.side</code>.
     */
    @Column(name = "side", nullable = false, length = 4)
    @NotNull
    @Size(max = 4)
    @Override
    public String getSide() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.orders.amount</code>.
     */
    @Override
    public void setAmount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.orders.amount</code>.
     */
    @Column(name = "amount", nullable = false, precision = 64)
    @NotNull
    @Override
    public Long getAmount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.orders.price</code>.
     */
    @Override
    public void setPrice(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.orders.price</code>.
     */
    @Column(name = "price", nullable = false)
    @NotNull
    @Override
    public BigDecimal getPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.orders.status</code>.
     */
    @Override
    public void setStatus(OrderStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.orders.status</code>.
     */
    @Column(name = "status", nullable = false)
    @NotNull
    @Override
    public OrderStatus getStatus() {
        return (OrderStatus) get(5);
    }

    /**
     * Setter for <code>public.orders.x_created_on</code>.
     */
    @Override
    public void setXCreatedOn(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.orders.x_created_on</code>.
     */
    @Column(name = "x_created_on", nullable = false)
    @Override
    public LocalDateTime getXCreatedOn() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.orders.x_updated_on</code>.
     */
    @Override
    public void setXUpdatedOn(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.orders.x_updated_on</code>.
     */
    @Column(name = "x_updated_on")
    @Override
    public LocalDateTime getXUpdatedOn() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.orders.x_deleted_on</code>.
     */
    @Override
    public void setXDeletedOn(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.orders.x_deleted_on</code>.
     */
    @Column(name = "x_deleted_on")
    @Override
    public LocalDateTime getXDeletedOn() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.orders.x_active</code>.
     */
    @Override
    public void setXActive(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.orders.x_active</code>.
     */
    @Column(name = "x_active")
    @Override
    public Boolean getXActive() {
        return (Boolean) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Long, String, Long, BigDecimal, OrderStatus, LocalDateTime, LocalDateTime, LocalDateTime, Boolean> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Long, String, Long, BigDecimal, OrderStatus, LocalDateTime, LocalDateTime, LocalDateTime, Boolean> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Orders.ORDERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Orders.ORDERS.INSTRUMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Orders.ORDERS.SIDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Orders.ORDERS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Orders.ORDERS.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OrderStatus> field6() {
        return Orders.ORDERS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field7() {
        return Orders.ORDERS.X_CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field8() {
        return Orders.ORDERS.X_UPDATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field9() {
        return Orders.ORDERS.X_DELETED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return Orders.ORDERS.X_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getInstrumentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSide();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderStatus component6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component7() {
        return getXCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component8() {
        return getXUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component9() {
        return getXDeletedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getXActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getInstrumentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSide();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderStatus value6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value7() {
        return getXCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value8() {
        return getXUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value9() {
        return getXDeletedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getXActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value2(Long value) {
        setInstrumentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value3(String value) {
        setSide(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value4(Long value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value5(BigDecimal value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value6(OrderStatus value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value7(LocalDateTime value) {
        setXCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value8(LocalDateTime value) {
        setXUpdatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value9(LocalDateTime value) {
        setXDeletedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value10(Boolean value) {
        setXActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord values(Long value1, Long value2, String value3, Long value4, BigDecimal value5, OrderStatus value6, LocalDateTime value7, LocalDateTime value8, LocalDateTime value9, Boolean value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IOrders from) {
        setId(from.getId());
        setInstrumentId(from.getInstrumentId());
        setSide(from.getSide());
        setAmount(from.getAmount());
        setPrice(from.getPrice());
        setStatus(from.getStatus());
        setXCreatedOn(from.getXCreatedOn());
        setXUpdatedOn(from.getXUpdatedOn());
        setXDeletedOn(from.getXDeletedOn());
        setXActive(from.getXActive());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IOrders> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Long id, Long instrumentId, String side, Long amount, BigDecimal price, OrderStatus status, LocalDateTime xCreatedOn, LocalDateTime xUpdatedOn, LocalDateTime xDeletedOn, Boolean xActive) {
        super(Orders.ORDERS);

        set(0, id);
        set(1, instrumentId);
        set(2, side);
        set(3, amount);
        set(4, price);
        set(5, status);
        set(6, xCreatedOn);
        set(7, xUpdatedOn);
        set(8, xDeletedOn);
        set(9, xActive);
    }
}
