/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.pojos;


import java.time.LocalDateTime;
import java.util.Arrays;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import quantasma.app.db.enums.StrategyStatus;
import quantasma.app.db.enums.StrategyType;
import quantasma.app.db.tables.interfaces.IStrategies;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "strategies", schema = "public", indexes = {
    @Index(name = "strategies_pk_id", unique = true, columnList = "id ASC"),
    @Index(name = "strategies_uq_name", unique = true, columnList = "name ASC")
})
public class Strategies implements IStrategies {

    private static final long serialVersionUID = 691603034;

    private Long           id;
    private String         name;
    private String         class_;
    private String         checksum;
    private Boolean        active;
    private StrategyStatus status;
    private StrategyType[] type;
    private LocalDateTime  xCreatedOn;
    private LocalDateTime  xUpdatedOn;
    private LocalDateTime  xDeletedOn;
    private Boolean        xActive;

    public Strategies() {}

    public Strategies(IStrategies value) {
        this.id = value.getId();
        this.name = value.getName();
        this.class_ = value.getClass_();
        this.checksum = value.getChecksum();
        this.active = value.getActive();
        this.status = value.getStatus();
        this.type = value.getType();
        this.xCreatedOn = value.getXCreatedOn();
        this.xUpdatedOn = value.getXUpdatedOn();
        this.xDeletedOn = value.getXDeletedOn();
        this.xActive = value.getXActive();
    }

    public Strategies(
        Long           id,
        String         name,
        String         class_,
        String         checksum,
        Boolean        active,
        StrategyStatus status,
        StrategyType[] type,
        LocalDateTime  xCreatedOn,
        LocalDateTime  xUpdatedOn,
        LocalDateTime  xDeletedOn,
        Boolean        xActive
    ) {
        this.id = id;
        this.name = name;
        this.class_ = class_;
        this.checksum = checksum;
        this.active = active;
        this.status = status;
        this.type = type;
        this.xCreatedOn = xCreatedOn;
        this.xUpdatedOn = xUpdatedOn;
        this.xDeletedOn = xDeletedOn;
        this.xActive = xActive;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "class", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getClass_() {
        return this.class_;
    }

    @Override
    public void setClass_(String class_) {
        this.class_ = class_;
    }

    @Column(name = "checksum", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getChecksum() {
        return this.checksum;
    }

    @Override
    public void setChecksum(String checksum) {
        this.checksum = checksum;
    }

    @Column(name = "active", nullable = false)
    @NotNull
    @Override
    public Boolean getActive() {
        return this.active;
    }

    @Override
    public void setActive(Boolean active) {
        this.active = active;
    }

    @Column(name = "status", nullable = false)
    @NotNull
    @Override
    public StrategyStatus getStatus() {
        return this.status;
    }

    @Override
    public void setStatus(StrategyStatus status) {
        this.status = status;
    }

    @Column(name = "type", nullable = false)
    @NotNull
    @Override
    public StrategyType[] getType() {
        return this.type;
    }

    @Override
    public void setType(StrategyType... type) {
        this.type = type;
    }

    @Column(name = "x_created_on", nullable = false)
    @Override
    public LocalDateTime getXCreatedOn() {
        return this.xCreatedOn;
    }

    @Override
    public void setXCreatedOn(LocalDateTime xCreatedOn) {
        this.xCreatedOn = xCreatedOn;
    }

    @Column(name = "x_updated_on")
    @Override
    public LocalDateTime getXUpdatedOn() {
        return this.xUpdatedOn;
    }

    @Override
    public void setXUpdatedOn(LocalDateTime xUpdatedOn) {
        this.xUpdatedOn = xUpdatedOn;
    }

    @Column(name = "x_deleted_on")
    @Override
    public LocalDateTime getXDeletedOn() {
        return this.xDeletedOn;
    }

    @Override
    public void setXDeletedOn(LocalDateTime xDeletedOn) {
        this.xDeletedOn = xDeletedOn;
    }

    @Column(name = "x_active")
    @Override
    public Boolean getXActive() {
        return this.xActive;
    }

    @Override
    public void setXActive(Boolean xActive) {
        this.xActive = xActive;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Strategies (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(class_);
        sb.append(", ").append(checksum);
        sb.append(", ").append(active);
        sb.append(", ").append(status);
        sb.append(", ").append(Arrays.toString(type));
        sb.append(", ").append(xCreatedOn);
        sb.append(", ").append(xUpdatedOn);
        sb.append(", ").append(xDeletedOn);
        sb.append(", ").append(xActive);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IStrategies from) {
        setId(from.getId());
        setName(from.getName());
        setClass_(from.getClass_());
        setChecksum(from.getChecksum());
        setActive(from.getActive());
        setStatus(from.getStatus());
        setType(from.getType());
        setXCreatedOn(from.getXCreatedOn());
        setXUpdatedOn(from.getXUpdatedOn());
        setXDeletedOn(from.getXDeletedOn());
        setXActive(from.getXActive());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IStrategies> E into(E into) {
        into.from(this);
        return into;
    }
}
