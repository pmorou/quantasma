/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import quantasma.app.db.tables.interfaces.ITablesContainingAuditColumns;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "tables_containing_audit_columns", schema = "public")
public class TablesContainingAuditColumns implements ITablesContainingAuditColumns {

    private static final long serialVersionUID = 1931956191;

    private String schemaName;
    private String tableName;

    public TablesContainingAuditColumns() {}

    public TablesContainingAuditColumns(ITablesContainingAuditColumns value) {
        this.schemaName = value.getSchemaName();
        this.tableName = value.getTableName();
    }

    public TablesContainingAuditColumns(
        String schemaName,
        String tableName
    ) {
        this.schemaName = schemaName;
        this.tableName = tableName;
    }

    @Column(name = "schema_name")
    @Override
    public String getSchemaName() {
        return this.schemaName;
    }

    @Override
    public void setSchemaName(String schemaName) {
        this.schemaName = schemaName;
    }

    @Column(name = "table_name")
    @Override
    public String getTableName() {
        return this.tableName;
    }

    @Override
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TablesContainingAuditColumns (");

        sb.append(schemaName);
        sb.append(", ").append(tableName);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ITablesContainingAuditColumns from) {
        setSchemaName(from.getSchemaName());
        setTableName(from.getTableName());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ITablesContainingAuditColumns> E into(E into) {
        into.from(this);
        return into;
    }
}
