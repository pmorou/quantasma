/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import quantasma.app.db.enums.OrderStatus;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "orders", schema = "public", indexes = {
    @Index(name = "orders_pk_id", unique = true, columnList = "id ASC")
})
public interface IOrders extends Serializable {

    /**
     * Setter for <code>public.orders.id</code>.
     */
    public void setId(Long value);

    /**
     * Getter for <code>public.orders.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    public Long getId();

    /**
     * Setter for <code>public.orders.instrument_id</code>.
     */
    public void setInstrumentId(Long value);

    /**
     * Getter for <code>public.orders.instrument_id</code>.
     */
    @Column(name = "instrument_id", nullable = false, precision = 64)
    @NotNull
    public Long getInstrumentId();

    /**
     * Setter for <code>public.orders.side</code>.
     */
    public void setSide(String value);

    /**
     * Getter for <code>public.orders.side</code>.
     */
    @Column(name = "side", nullable = false, length = 4)
    @NotNull
    @Size(max = 4)
    public String getSide();

    /**
     * Setter for <code>public.orders.amount</code>.
     */
    public void setAmount(Long value);

    /**
     * Getter for <code>public.orders.amount</code>.
     */
    @Column(name = "amount", nullable = false, precision = 64)
    @NotNull
    public Long getAmount();

    /**
     * Setter for <code>public.orders.price</code>.
     */
    public void setPrice(BigDecimal value);

    /**
     * Getter for <code>public.orders.price</code>.
     */
    @Column(name = "price", nullable = false)
    @NotNull
    public BigDecimal getPrice();

    /**
     * Setter for <code>public.orders.status</code>.
     */
    public void setStatus(OrderStatus value);

    /**
     * Getter for <code>public.orders.status</code>.
     */
    @Column(name = "status", nullable = false)
    @NotNull
    public OrderStatus getStatus();

    /**
     * Setter for <code>public.orders.x_created_on</code>.
     */
    public void setXCreatedOn(LocalDateTime value);

    /**
     * Getter for <code>public.orders.x_created_on</code>.
     */
    @Column(name = "x_created_on", nullable = false)
    public LocalDateTime getXCreatedOn();

    /**
     * Setter for <code>public.orders.x_updated_on</code>.
     */
    public void setXUpdatedOn(LocalDateTime value);

    /**
     * Getter for <code>public.orders.x_updated_on</code>.
     */
    @Column(name = "x_updated_on")
    public LocalDateTime getXUpdatedOn();

    /**
     * Setter for <code>public.orders.x_deleted_on</code>.
     */
    public void setXDeletedOn(LocalDateTime value);

    /**
     * Getter for <code>public.orders.x_deleted_on</code>.
     */
    @Column(name = "x_deleted_on")
    public LocalDateTime getXDeletedOn();

    /**
     * Setter for <code>public.orders.x_active</code>.
     */
    public void setXActive(Boolean value);

    /**
     * Getter for <code>public.orders.x_active</code>.
     */
    @Column(name = "x_active")
    public Boolean getXActive();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IOrders
     */
    public void from(quantasma.app.db.tables.interfaces.IOrders from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IOrders
     */
    public <E extends quantasma.app.db.tables.interfaces.IOrders> E into(E into);
}
