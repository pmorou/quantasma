/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import quantasma.app.db.tables.Brokers;
import quantasma.app.db.tables.Instruments;
import quantasma.app.db.tables.Orders;
import quantasma.app.db.tables.Strategies;
import quantasma.app.db.tables.Transactions;
import quantasma.app.db.tables.records.BrokersRecord;
import quantasma.app.db.tables.records.InstrumentsRecord;
import quantasma.app.db.tables.records.OrdersRecord;
import quantasma.app.db.tables.records.StrategiesRecord;
import quantasma.app.db.tables.records.TransactionsRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BrokersRecord, Long> IDENTITY_BROKERS = Identities0.IDENTITY_BROKERS;
    public static final Identity<InstrumentsRecord, Long> IDENTITY_INSTRUMENTS = Identities0.IDENTITY_INSTRUMENTS;
    public static final Identity<OrdersRecord, Long> IDENTITY_ORDERS = Identities0.IDENTITY_ORDERS;
    public static final Identity<StrategiesRecord, Long> IDENTITY_STRATEGIES = Identities0.IDENTITY_STRATEGIES;
    public static final Identity<TransactionsRecord, Long> IDENTITY_TRANSACTIONS = Identities0.IDENTITY_TRANSACTIONS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BrokersRecord> BROKERS_PK_ID = UniqueKeys0.BROKERS_PK_ID;
    public static final UniqueKey<InstrumentsRecord> INSTRUMENTS_PK_ID = UniqueKeys0.INSTRUMENTS_PK_ID;
    public static final UniqueKey<OrdersRecord> ORDERS_PK_ID = UniqueKeys0.ORDERS_PK_ID;
    public static final UniqueKey<StrategiesRecord> STRATEGIES_PK_ID = UniqueKeys0.STRATEGIES_PK_ID;
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS_PK_ID = UniqueKeys0.TRANSACTIONS_PK_ID;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OrdersRecord, InstrumentsRecord> ORDERS__ORDERS_FK_INSTRUMENT_ID = ForeignKeys0.ORDERS__ORDERS_FK_INSTRUMENT_ID;
    public static final ForeignKey<TransactionsRecord, BrokersRecord> TRANSACTIONS__TRANSACTIONS_FK_BROKER_ID = ForeignKeys0.TRANSACTIONS__TRANSACTIONS_FK_BROKER_ID;
    public static final ForeignKey<TransactionsRecord, OrdersRecord> TRANSACTIONS__TRANSACTIONS_FK_OPEN_ORDER_ID = ForeignKeys0.TRANSACTIONS__TRANSACTIONS_FK_OPEN_ORDER_ID;
    public static final ForeignKey<TransactionsRecord, OrdersRecord> TRANSACTIONS__TRANSACTIONS_FK_CLOSE_ORDER_ID = ForeignKeys0.TRANSACTIONS__TRANSACTIONS_FK_CLOSE_ORDER_ID;
    public static final ForeignKey<TransactionsRecord, StrategiesRecord> TRANSACTIONS__TRANSACTIONS_FK_STRATEGY_ID = ForeignKeys0.TRANSACTIONS__TRANSACTIONS_FK_STRATEGY_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<BrokersRecord, Long> IDENTITY_BROKERS = Internal.createIdentity(Brokers.BROKERS, Brokers.BROKERS.ID);
        public static Identity<InstrumentsRecord, Long> IDENTITY_INSTRUMENTS = Internal.createIdentity(Instruments.INSTRUMENTS, Instruments.INSTRUMENTS.ID);
        public static Identity<OrdersRecord, Long> IDENTITY_ORDERS = Internal.createIdentity(Orders.ORDERS, Orders.ORDERS.ID);
        public static Identity<StrategiesRecord, Long> IDENTITY_STRATEGIES = Internal.createIdentity(Strategies.STRATEGIES, Strategies.STRATEGIES.ID);
        public static Identity<TransactionsRecord, Long> IDENTITY_TRANSACTIONS = Internal.createIdentity(Transactions.TRANSACTIONS, Transactions.TRANSACTIONS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BrokersRecord> BROKERS_PK_ID = Internal.createUniqueKey(Brokers.BROKERS, "brokers_pk_id", Brokers.BROKERS.ID);
        public static final UniqueKey<InstrumentsRecord> INSTRUMENTS_PK_ID = Internal.createUniqueKey(Instruments.INSTRUMENTS, "instruments_pk_id", Instruments.INSTRUMENTS.ID);
        public static final UniqueKey<OrdersRecord> ORDERS_PK_ID = Internal.createUniqueKey(Orders.ORDERS, "orders_pk_id", Orders.ORDERS.ID);
        public static final UniqueKey<StrategiesRecord> STRATEGIES_PK_ID = Internal.createUniqueKey(Strategies.STRATEGIES, "strategies_pk_id", Strategies.STRATEGIES.ID);
        public static final UniqueKey<TransactionsRecord> TRANSACTIONS_PK_ID = Internal.createUniqueKey(Transactions.TRANSACTIONS, "transactions_pk_id", Transactions.TRANSACTIONS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<OrdersRecord, InstrumentsRecord> ORDERS__ORDERS_FK_INSTRUMENT_ID = Internal.createForeignKey(quantasma.app.db.Keys.INSTRUMENTS_PK_ID, Orders.ORDERS, "orders__orders_fk_instrument_id", Orders.ORDERS.INSTRUMENT_ID);
        public static final ForeignKey<TransactionsRecord, BrokersRecord> TRANSACTIONS__TRANSACTIONS_FK_BROKER_ID = Internal.createForeignKey(quantasma.app.db.Keys.BROKERS_PK_ID, Transactions.TRANSACTIONS, "transactions__transactions_fk_broker_id", Transactions.TRANSACTIONS.BROKER_ID);
        public static final ForeignKey<TransactionsRecord, OrdersRecord> TRANSACTIONS__TRANSACTIONS_FK_OPEN_ORDER_ID = Internal.createForeignKey(quantasma.app.db.Keys.ORDERS_PK_ID, Transactions.TRANSACTIONS, "transactions__transactions_fk_open_order_id", Transactions.TRANSACTIONS.OPEN_ORDER_ID);
        public static final ForeignKey<TransactionsRecord, OrdersRecord> TRANSACTIONS__TRANSACTIONS_FK_CLOSE_ORDER_ID = Internal.createForeignKey(quantasma.app.db.Keys.ORDERS_PK_ID, Transactions.TRANSACTIONS, "transactions__transactions_fk_close_order_id", Transactions.TRANSACTIONS.CLOSE_ORDER_ID);
        public static final ForeignKey<TransactionsRecord, StrategiesRecord> TRANSACTIONS__TRANSACTIONS_FK_STRATEGY_ID = Internal.createForeignKey(quantasma.app.db.Keys.STRATEGIES_PK_ID, Transactions.TRANSACTIONS, "transactions__transactions_fk_strategy_id", Transactions.TRANSACTIONS.STRATEGY_ID);
    }
}
