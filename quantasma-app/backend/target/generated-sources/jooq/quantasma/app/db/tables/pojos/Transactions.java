/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db.tables.pojos;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import quantasma.app.db.enums.TransactionStatus;
import quantasma.app.db.tables.interfaces.ITransactions;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "transactions", schema = "public", indexes = {
    @Index(name = "transactions_idx_open_order_id", columnList = "open_order_id ASC"),
    @Index(name = "transactions_idx_open_order_id_close_order_id", columnList = "open_order_id ASC, close_order_id ASC"),
    @Index(name = "transactions_idx_strategy_id", columnList = "strategy_id ASC"),
    @Index(name = "transactions_pk_id", unique = true, columnList = "id ASC")
})
public class Transactions implements ITransactions {

    private static final long serialVersionUID = 56513984;

    private Long              id;
    private Long              brokerId;
    private LocalDateTime     openOn;
    private LocalDateTime     closeOn;
    private Long              openOrderId;
    private Long              closeOrderId;
    private BigDecimal        pipsProfit;
    private Long              strategyId;
    private TransactionStatus status;
    private LocalDateTime     xCreatedOn;
    private LocalDateTime     xUpdatedOn;
    private LocalDateTime     xDeletedOn;
    private Boolean           xActive;

    public Transactions() {}

    public Transactions(ITransactions value) {
        this.id = value.getId();
        this.brokerId = value.getBrokerId();
        this.openOn = value.getOpenOn();
        this.closeOn = value.getCloseOn();
        this.openOrderId = value.getOpenOrderId();
        this.closeOrderId = value.getCloseOrderId();
        this.pipsProfit = value.getPipsProfit();
        this.strategyId = value.getStrategyId();
        this.status = value.getStatus();
        this.xCreatedOn = value.getXCreatedOn();
        this.xUpdatedOn = value.getXUpdatedOn();
        this.xDeletedOn = value.getXDeletedOn();
        this.xActive = value.getXActive();
    }

    public Transactions(
        Long              id,
        Long              brokerId,
        LocalDateTime     openOn,
        LocalDateTime     closeOn,
        Long              openOrderId,
        Long              closeOrderId,
        BigDecimal        pipsProfit,
        Long              strategyId,
        TransactionStatus status,
        LocalDateTime     xCreatedOn,
        LocalDateTime     xUpdatedOn,
        LocalDateTime     xDeletedOn,
        Boolean           xActive
    ) {
        this.id = id;
        this.brokerId = brokerId;
        this.openOn = openOn;
        this.closeOn = closeOn;
        this.openOrderId = openOrderId;
        this.closeOrderId = closeOrderId;
        this.pipsProfit = pipsProfit;
        this.strategyId = strategyId;
        this.status = status;
        this.xCreatedOn = xCreatedOn;
        this.xUpdatedOn = xUpdatedOn;
        this.xDeletedOn = xDeletedOn;
        this.xActive = xActive;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "broker_id", nullable = false, precision = 64)
    @NotNull
    @Override
    public Long getBrokerId() {
        return this.brokerId;
    }

    @Override
    public void setBrokerId(Long brokerId) {
        this.brokerId = brokerId;
    }

    @Column(name = "open_on", nullable = false)
    @NotNull
    @Override
    public LocalDateTime getOpenOn() {
        return this.openOn;
    }

    @Override
    public void setOpenOn(LocalDateTime openOn) {
        this.openOn = openOn;
    }

    @Column(name = "close_on")
    @Override
    public LocalDateTime getCloseOn() {
        return this.closeOn;
    }

    @Override
    public void setCloseOn(LocalDateTime closeOn) {
        this.closeOn = closeOn;
    }

    @Column(name = "open_order_id", nullable = false, precision = 64)
    @NotNull
    @Override
    public Long getOpenOrderId() {
        return this.openOrderId;
    }

    @Override
    public void setOpenOrderId(Long openOrderId) {
        this.openOrderId = openOrderId;
    }

    @Column(name = "close_order_id", precision = 64)
    @Override
    public Long getCloseOrderId() {
        return this.closeOrderId;
    }

    @Override
    public void setCloseOrderId(Long closeOrderId) {
        this.closeOrderId = closeOrderId;
    }

    @Column(name = "pips_profit")
    @Override
    public BigDecimal getPipsProfit() {
        return this.pipsProfit;
    }

    @Override
    public void setPipsProfit(BigDecimal pipsProfit) {
        this.pipsProfit = pipsProfit;
    }

    @Column(name = "strategy_id", nullable = false, precision = 64)
    @NotNull
    @Override
    public Long getStrategyId() {
        return this.strategyId;
    }

    @Override
    public void setStrategyId(Long strategyId) {
        this.strategyId = strategyId;
    }

    @Column(name = "status", nullable = false)
    @NotNull
    @Override
    public TransactionStatus getStatus() {
        return this.status;
    }

    @Override
    public void setStatus(TransactionStatus status) {
        this.status = status;
    }

    @Column(name = "x_created_on", nullable = false)
    @Override
    public LocalDateTime getXCreatedOn() {
        return this.xCreatedOn;
    }

    @Override
    public void setXCreatedOn(LocalDateTime xCreatedOn) {
        this.xCreatedOn = xCreatedOn;
    }

    @Column(name = "x_updated_on")
    @Override
    public LocalDateTime getXUpdatedOn() {
        return this.xUpdatedOn;
    }

    @Override
    public void setXUpdatedOn(LocalDateTime xUpdatedOn) {
        this.xUpdatedOn = xUpdatedOn;
    }

    @Column(name = "x_deleted_on")
    @Override
    public LocalDateTime getXDeletedOn() {
        return this.xDeletedOn;
    }

    @Override
    public void setXDeletedOn(LocalDateTime xDeletedOn) {
        this.xDeletedOn = xDeletedOn;
    }

    @Column(name = "x_active")
    @Override
    public Boolean getXActive() {
        return this.xActive;
    }

    @Override
    public void setXActive(Boolean xActive) {
        this.xActive = xActive;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Transactions (");

        sb.append(id);
        sb.append(", ").append(brokerId);
        sb.append(", ").append(openOn);
        sb.append(", ").append(closeOn);
        sb.append(", ").append(openOrderId);
        sb.append(", ").append(closeOrderId);
        sb.append(", ").append(pipsProfit);
        sb.append(", ").append(strategyId);
        sb.append(", ").append(status);
        sb.append(", ").append(xCreatedOn);
        sb.append(", ").append(xUpdatedOn);
        sb.append(", ").append(xDeletedOn);
        sb.append(", ").append(xActive);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ITransactions from) {
        setId(from.getId());
        setBrokerId(from.getBrokerId());
        setOpenOn(from.getOpenOn());
        setCloseOn(from.getCloseOn());
        setOpenOrderId(from.getOpenOrderId());
        setCloseOrderId(from.getCloseOrderId());
        setPipsProfit(from.getPipsProfit());
        setStrategyId(from.getStrategyId());
        setStatus(from.getStatus());
        setXCreatedOn(from.getXCreatedOn());
        setXUpdatedOn(from.getXUpdatedOn());
        setXDeletedOn(from.getXDeletedOn());
        setXActive(from.getXActive());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ITransactions> E into(E into) {
        into.from(this);
        return into;
    }
}
