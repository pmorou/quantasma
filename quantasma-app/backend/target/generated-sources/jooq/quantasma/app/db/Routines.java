/*
 * This file is generated by jOOQ.
 */
package quantasma.app.db;


import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Result;

import quantasma.app.db.routines.CreateAuditColumnsTrigger;
import quantasma.app.db.tables.TablesContainingAuditColumns;
import quantasma.app.db.tables.records.TablesContainingAuditColumnsRecord;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.create_audit_columns_trigger</code>
     */
    public static void createAuditColumnsTrigger(Configuration configuration, String schemaName, String tableName) {
        CreateAuditColumnsTrigger p = new CreateAuditColumnsTrigger();
        p.setSchemaName(schemaName);
        p.setTableName(tableName);

        p.execute(configuration);
    }

    /**
     * Call <code>public.tables_containing_audit_columns</code>.
     */
    public static Result<TablesContainingAuditColumnsRecord> tablesContainingAuditColumns(Configuration configuration) {
        return configuration.dsl().selectFrom(quantasma.app.db.tables.TablesContainingAuditColumns.TABLES_CONTAINING_AUDIT_COLUMNS.call()).fetch();
    }

    /**
     * Get <code>public.tables_containing_audit_columns</code> as a table.
     */
    public static TablesContainingAuditColumns tablesContainingAuditColumns() {
        return quantasma.app.db.tables.TablesContainingAuditColumns.TABLES_CONTAINING_AUDIT_COLUMNS.call();
    }
}
